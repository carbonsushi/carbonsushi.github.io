[{"content":"主要OSの中でAndroidだけがmDNSを名前解決できないらしい。\nChromium・AOSPにissueが提出されているがまったくもって動きがない。\nということでDotLocalFinderというアプリを丸パクリインスパイアしてmDNSの名前解決をしてみる。\nDNSもmDNSもDNS-SDも全く知らないので聞きかじり見かじり注意。\nそもそもmDNSとは そもそもmDNSという規格がよくわからないので調べてみる。\nWikipedia様によると、RFC 6762で定義されたZeroconf技術とか言うものらしい。\nZeroconfとか言うのはDHCPやらmDNSやらUPnPやらの技術を一纏めにした言い方なのかな？\n似た技術の中にRFC 6763で定義されたDNS-SDというものがあるがこっちはネットワーク内の機器を検索する技術みたい。\nmDNSをAndroidで名前解決するには まず「mDNS Android Developers」でGooglingするとNSDってAPIが出てくるがこれはDNS-SD関連のものでmDNSとは関係ないらしい。\n他にもJmDNSやらmdnsjavaなど使えそうなライブラリが出てくるがどれもDNS-SD関連のものでmDNSを名前解決できるものは出てこない。\n自分の解釈が間違ってるのかな？\nするとDotLocalFinderという唯一自分の目的にあってそうなアプリを見つけたのでコードを見てみると「xyz.gianlu.mdnsjava:mdnsjava」というライブラリを使用している。\n調べるとStackoverflowにこれを使えば名前解決できるとあったし間違いない。\n恐らくリポジトリはこれだが現在削除されていて閲覧は不可能。\nmavenのSourceを見る限り前述したmdnsjavaのフォークのようだ。\n実装 というわけで丸パクリインスパイアしてテキトーに実装してみる。\nメインスレッドでやると怒られるのでDispatchers.IOでやろーね☆\nちなみにTarget APIを30以上に上げると動作しません。\nhttps://github.com/Network-Revolution/DotLocalFinder/issues/2\n（29だとプレイストア弾かれるらしいけど）\n// 名前解決するホスト名 val resolveHost = \u0026#34;\u0026#34; lifecycleScope.launch { val records = withContext(Dispatchers.IO) { Lookup(resolveHost, Type.A, DClass.IN).lookupRecords() // IPv6 (AAAAレコード)  // Lookup(resolveHost, Type.AAAA, DClass.IN).lookupRecords()  } if (records.isEmpty()) { // 名前解決に失敗した場合  } else { val resolvedIP = (records[0] as ARecord).address.hostAddress // IPv6 (AAAAレコード)  // val resolvedIP = (records[0] as AAAARecord).address.hostAddress  } } MulticastLockはやらなくても良いっぽい。（ライブラリ側でよしなにしてくれてるのかな？）\n","permalink":"https://carbonsushi.github.io/posts/android-resolve-mdns/","summary":"主要OSの中でAndroidだけがmDNSを名前解決できないらしい。 Chromium・AOSPにissueが提出されているがまったくもって動","title":"AndroidでmDNSを名前解決する"},{"content":"HugoとGitHub Pagesで作ってみた。\n","permalink":"https://carbonsushi.github.io/posts/hello-blog/","summary":"HugoとGitHub Pagesで作ってみた。","title":"Hello, Blog!"}]